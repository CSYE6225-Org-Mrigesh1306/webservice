#Webapp Workflow

name: Build Deploy workflow
on:
  push:
    branches:
      - main

jobs:
 ci_cd:
   runs-on: ubuntu-latest
  
   steps:
    - name: checkout repository
      uses: actions/checkout@v2

    - name: Set sha_short
      id: vars
      run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

    #Set up JDK 11
    - name: Set up JDK
      uses: actions/setup-java@v2
      with:
          java-version: '11'
          distribution: 'adopt'

    #Set up Maven cache
    - name: Build with Maven
      run: |
        mvn -B package --file WebApp/pom.xml
        mkdir target && cp WebApp/target/*.jar target
        
    # Configure Github Actions credentials    
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.GHACTIONS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.GHACTIONS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1


    - name: Build Deployment Artifact
      run: |
        mkdir codedeploy_artifact
        zip -r webapp-${{ steps.vars.outputs.sha_short }}.zip \
        pwd
        ls -al
        ./target/WebApp-0.0.1-SNAPSHOT.jar ./codedeploy/*.sh appspec.yml
        ls -al
        mv webapp-${{ steps.vars.outputs.sha_short }}.zip ./codedeploy_artifact
        ls -al
        pwd

    # Copy Artifacts to S3
    - name: Copy Artifacts to S3
      run: |
        aws s3 sync ./codedeploy_artifact s3://${{ secrets.S3_CODEDEPLOY_BUCKET }}

      # Deploy Artifact to EC2
    - name: Deploy Webapp
      run: |
        output=$(aws deploy create-deployment \
        --application-name "csye6225-webapp" \
        --deployment-config-name CodeDeployDefault.AllAtOnce \
        --deployment-group-name "csye6225-webapp-deployment" \
        --description "CSYE6225 CODEDEPLOY Webapp" \
        --s3-location bucket=${{ secrets.S3_CODEDEPLOY_BUCKET }},bundleType=zip,key=webapp-${{ steps.vars.outputs.sha_short }}.zip \
        --region us-east-1 \
        --output json)
        echo $output
        dId=$(echo $output | jq -r '.deploymentId')
        aws deploy wait deployment-successful --deployment-id $dId